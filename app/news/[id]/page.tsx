"use client";

import { useEffect, useState } from "react";
import { useParams } from "next/navigation";
import Link from "next/link";
import Image from "next/image";

import { News, RelatedNews } from "@/types";
import api from "@/lib/axios";

export default function NewsDetailPage() {
  const { id } = useParams();
  
  // State management
  const [news, setNews] = useState<News>({
    id: "",
    name: "",
    images: [],
    date: "",
    views: 0,
    readTime: "",
    description: "",
    type: "",
    createdAt: "",
  });
  const [isLoading, setIsLoading] = useState(true);
  const [categories, setCategories] = useState<any[]>([]);
  const [trendingProducts, setTrendingProducts] = useState<any[]>([]);
  const [galleryImages, setGalleryImages] = useState<any[]>([]);
  const [tags, setTags] = useState<string[]>([]);

  useEffect(() => {
    const fetchData = async () => {
      try {
        // Fetch news detail
        const response = await api.get(`/news/detail/${id}`);
        await api.patch(`/news/${id}/views`); // TƒÉng view count
        setNews(response.data);

        // Fetch categories
        try {
          const categoriesResponse = await api.get("/categories");
          setCategories(categoriesResponse.data || []);
        } catch (error) {
          console.error("L·ªói khi t·∫£i danh m·ª•c:", error);
        }

        // Fetch trending products
        try {
          const productsResponse = await api.get("/products?limit=4&sort=popular");
          setTrendingProducts(productsResponse.data || []);
        } catch (error) {
          console.error("L·ªói khi t·∫£i s·∫£n ph·∫©m th·ªãnh h√†nh:", error);
        }

        // Fetch gallery images from news
        try {
          const newsResponse = await api.get("/news?limit=4");
          const galleryData = newsResponse.data
            .filter((item: any) => item.images && item.images.length > 0)
            .slice(0, 4)
            .map((item: any) => ({
              id: item.id,
              image: item.images[0],
              title: item.name
            }));
          setGalleryImages(galleryData);
        } catch (error) {
          console.error("L·ªói khi t·∫£i th∆∞ vi·ªán ·∫£nh:", error);
        }

        // Generate tags from news content
        try {
          const allNewsResponse = await api.get("/news");
          const allTags = new Set<string>();
          allNewsResponse.data.forEach((item: any) => {
            if (item.description) {
              const words = item.description.toLowerCase()
                .replace(/[^\w\s]/g, '')
                .split(/\s+/)
                .filter((word: string) => word.length > 3);
              words.forEach((word: string) => allTags.add(word));
            }
          });
          setTags(Array.from(allTags).slice(0, 6));
        } catch (error) {
          console.error("L·ªói khi t·∫£i th·∫ª:", error);
        }

      } catch (error) {
        console.error("L·ªói khi t·∫£i d·ªØ li·ªáu:", error);
      } finally {
        setIsLoading(false);
      }
    };
    
    fetchData();
  }, [id]);

  if (isLoading) {
    return (
      <main className="main-content">
        <div className="container py-4">
          <div className="text-center">
            <div className="spinner-border text-success" role="status">
              <span className="visually-hidden">ƒêang t·∫£i...</span>
            </div>
            <p className="mt-3">ƒêang t·∫£i b√†i vi·∫øt...</p>
          </div>
        </div>
      </main>
    );
  }

  if (!news) {
    return (
      <main className="main-content">
        <div className="container py-4">
          <div className="text-center">
            <h3 className="text-danger">Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt</h3>
            <Link href="/news" className="btn btn-success mt-3">
              Quay l·∫°i trang tin t·ª©c
            </Link>
          </div>
        </div>
      </main>
    );
  }

  function insertImagesIntoText(
    text: string,
    listImages: string[]
  ): (string | { image: string })[] {
    // T√°ch ƒëo·∫°n theo xu·ªëng d√≤ng k√©p ho·∫∑c ch·∫•m k·∫øt th√∫c c√¢u
    const paragraphs = text
      .split(/\n\s*\n|(?<=\.)\s+/) // t√°ch theo newline ho·∫∑c sau d·∫•u ch·∫•m
      .map((p) => p.trim())
      .filter(Boolean);

    const result: (string | { image: string })[] = [];
    if (paragraphs.length === 0)
      return listImages.map((img) => ({ image: img }));

    const step = Math.ceil(paragraphs.length / (listImages.length + 1));

    let imgIndex = 0;
    for (let i = 0; i < paragraphs.length; i++) {
      result.push(paragraphs[i]);

      if ((i + 1) % step === 0 && imgIndex < listImages.length) {
        result.push({ image: listImages[imgIndex] });
        imgIndex++;
      }
    }

    // N·∫øu c√≤n ·∫£nh d∆∞ th√¨ nh√©t v√†o cu·ªëi
    while (imgIndex < listImages.length) {
      result.push({ image: listImages[imgIndex] });
      imgIndex++;
    }

    return result;
  }

  const mixedContent = insertImagesIntoText(
    news?.description ?? "",
    news?.images ?? []
  );
  console.log("üöÄ ~ NewsDetailPage ~ mixedContent:", mixedContent);
  return (
    <section>
      <div className="breadcrumb-section">
        <div className="container">
          <h3 className="text-center">News Detail</h3>
          <nav aria-label="breadcrumb">
            <ol className="breadcrumb mb-0">
              <li className="breadcrumb-item">
                <Link href="/">Home</Link>
              </li>
              <li className="breadcrumb-item">
                <Link href="/news">News</Link>
              </li>
              <li className="breadcrumb-item active" aria-current="page">
                News Detail
              </li>
            </ol>
          </nav>
        </div>
              </div>

      <div className="news-detail">
        <div className="section-article-detail">
          <div className="container">
            <div className="row">
              <div className="col-lg-9 article-content">
                <div className="article-category">{news.type || "C√¥ng th·ª©c n·∫•u ƒÉn"}</div>
                <h1 className="article-title">{news.name || "Smartwatch t·ªët nh·∫•t 2022: nh·ªØng thi·∫øt b·ªã ƒëeo tay h√†ng ƒë·∫ßu b·∫°n c√≥ th·ªÉ mua ngay h√¥m nay"}</h1>
                <div className="article-meta">
                  <span className="author">
                    b·ªüi Sugar Rock ¬∑ 
                    <span className="time">{news.date || "2 gi·ªù tr∆∞·ªõc"} ¬∑</span>
                    <span className="read-time">{news.readTime || "6 ph√∫t ƒë·ªçc"}</span>
                </span>
              </div>
                <div className="article-image">
                  <Image 
                    src={news.images?.[0] || "/images/food1.png"} 
                    alt={news.name || "Best smartwatch 2022"}
                    width={800}
                    height={400}
                  />
                </div>
                <div className="article-excerpt">
                  {news.description || "Gi√∫p m·ªçi ng∆∞·ªùi s·ªëng h·∫°nh ph√∫c v√† kh·ªèe m·∫°nh h∆°n t·∫°i nh√† th√¥ng qua cƒÉn b·∫øp c·ªßa h·ªç. Kitchn l√† t·∫°p ch√≠ ·∫©m th·ª±c h√†ng ng√†y tr√™n Web ca ng·ª£i cu·ªôc s·ªëng trong b·∫øp th√¥ng qua vi·ªác n·∫•u ƒÉn t·∫°i nh√† v√† tr√≠ tu·ªá ·∫©m th·ª±c."}
              </div>
                <div className="article-body">
                {mixedContent.map((item, idx) =>
                  typeof item === "string" ? (
                      <p key={idx}>{item}</p>
                  ) : (
                      <div key={idx} className="article-images-row">
                    <Image
                      src={item.image}
                      alt={`image-${idx}`}
                          width={400}
                          height={300}
                        />
                      </div>
                  )
                )}
              </div>
                <div className="article-tags">
                  <Link className="tag" href="#">{news.type || "B√°nh ng·ªçt"}</Link>
                  <Link className="tag" href="#">C√¥ng th·ª©c</Link>
                  <Link className="tag" href="#">G√†</Link>
                </div>
                <div className="article-share">
                  <span>
                    Chia s·∫ª b√†i vi·∫øt:
                    <Link href="#"><i className="fa fa-facebook"></i></Link>
                    <Link href="#"><i className="fa fa-twitter"></i></Link>
                    <Link href="#"><i className="fa fa-pinterest"></i></Link>
                  </span>
            </div>
          </div>

          {/* Sidebar */}
              <div className="col-lg-3 sidebar">
                <div className="sidebar-box category-box">
                  <div className="sidebar-title">Danh m·ª•c</div>
                  <ul className="category-list">
                    {categories.length > 0 ? (
                      categories.map((category) => (
                        <li key={category.id}>
                          <Link href={`/product?category=${category.id}`}>
                            {category.name}
                          </Link>
                        </li>
                      ))
                    ) : (
                      <>
                        <li><Link href="#">S·ªØa & S·∫£n ph·∫©m t·ª´ s·ªØa</Link></li>
                        <li><Link href="#">Qu·∫ßn √°o</Link></li>
                        <li><Link href="#">Th·ª©c ƒÉn th√∫ c∆∞ng</Link></li>
                        <li><Link href="#">Nguy√™n li·ªáu l√†m b√°nh</Link></li>
                        <li><Link href="#">Tr√°i c√¢y t∆∞∆°i</Link></li>
                      </>
                    )}
                  </ul>
                </div>
                
                <div className="sidebar-box trending-box">
                  <div className="sidebar-title">ƒêang th·ªãnh h√†nh</div>
                  <ul className="trending-list">
                    {trendingProducts.length > 0 ? (
                      trendingProducts.map((product) => (
                        <li key={product.id}>
                          <Image 
                            src={product.images?.[0] || "/images/trend1.png"} 
                            alt={product.name} 
                            width={60} 
                            height={60} 
                          />
                          <div className="trend-info">
                            <div className="trend-name">{product.name}</div>
                            <div className="trend-price">
                              {(product.price / 1000).toLocaleString('vi-VN')}.000ƒë
                            </div>
                          </div>
                        </li>
                      ))
                    ) : (
                      <>
                        <li>
                          <Image src="/images/trend1.png" alt="Chen Cardigan" width={60} height={60} />
                          <div className="trend-info">
                            <div className="trend-name">√Åo len Chen</div>
                            <div className="trend-price">2.300.000ƒë</div>
                          </div>
                        </li>
                        <li>
                          <Image src="/images/trend2.png" alt="Chen Sweater" width={60} height={60} />
                          <div className="trend-info">
                            <div className="trend-name">√Åo sweater Chen</div>
                            <div className="trend-price">2.070.000ƒë</div>
                          </div>
                        </li>
                        <li>
                          <Image src="/images/trend3.png" alt="Colorful Jacket" width={60} height={60} />
                          <div className="trend-info">
                            <div className="trend-name">√Åo kho√°c ƒëa m√†u</div>
                            <div className="trend-price">590.000ƒë</div>
                          </div>
                        </li>
                        <li>
                          <Image src="/images/trend4.png" alt="Lorem, ipsum" width={60} height={60} />
                          <div className="trend-info">
                            <div className="trend-name">S·∫£n ph·∫©m m·ªõi</div>
                            <div className="trend-price">580.000ƒë</div>
                          </div>
                        </li>
                      </>
                    )}
                  </ul>
                </div>
                
                <div className="sidebar-box gallery-box">
                  <div className="sidebar-title">Th∆∞ vi·ªán ·∫£nh</div>
                  <div className="gallery-list">
                    {galleryImages.length > 0 ? (
                      galleryImages.map((item) => (
                        <Image 
                          key={item.id}
                          src={item.image} 
                          alt={item.title} 
                          width={80} 
                          height={80} 
                        />
                      ))
                    ) : (
                      <>
                        <Image src="/images/gallery1.png" alt="Gallery 1" width={80} height={80} />
                        <Image src="/images/gallery2.png" alt="Gallery 2" width={80} height={80} />
                        <Image src="/images/gallery3.png" alt="Gallery 3" width={80} height={80} />
                        <Image src="/images/gallery4.png" alt="Gallery 4" width={80} height={80} />
                      </>
                    )}
                  </div>
                </div>
                
                <div className="sidebar-box tags-box">
                  <div className="sidebar-title">Th·∫ª ph·ªï bi·∫øn</div>
                  <div className="tags-list">
                    {tags.length > 0 ? (
                      tags.map((tag, index) => (
                        <span key={index} className="tag">{tag}</span>
                      ))
                    ) : (
                      <>
                        <span className="tag">B·∫Øp c·∫£i</span>
                        <span className="tag">B√¥ng c·∫£i xanh</span>
                        <span className="tag">Sinh t·ªë</span>
                        <span className="tag">Tr√°i c√¢y</span>
                        <span className="tag">Salad</span>
                        <span className="tag">Khai v·ªã</span>
                      </>
                    )}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}

// Component hi·ªÉn th·ªã b√†i vi·∫øt li√™n quan
function RelatedPosts({ currentId }: { currentId: string }) {
  const [related, setRelated] = useState<RelatedNews[]>([]);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    const getNews = async () => {
      try {
        const response = await api.get("/news");
        const mapped = response.data.map((item: RelatedNews) => ({
          ...item,
          date: item.createdAt
            ? new Date(item.createdAt).toLocaleDateString("vi-VN")
            : "", // format ng√†y Vi·ªát Nam
          views: Math.floor(Math.random() * 1000) + 100, // Random views cho demo
          readTime: Math.floor(Math.random() * 10) + 3 + " ph√∫t", // Random th·ªùi gian ƒë·ªçc
          description: item.description,
        }));
        setRelated(mapped);
        setIsLoading(false);
      } catch (error) {
        console.error("L·ªói khi t·∫£i tin t·ª©c:", error);
      } finally {
        setIsLoading(false);
      }
    };
    getNews();
  }, [currentId]);

  if (isLoading) {
    return (
      <div
        style={{
          background: "#fff",
          borderRadius: 16,
          padding: 24,
          border: "1.5px solid #e0fbe2",
          boxShadow: "0 2px 8px rgba(34,197,94,0.05)",
        }}
      >
        <h5 className="fw-bold mb-3" style={{ color: "#22c55e" }}>
          B√†i Vi·∫øt Li√™n Quan
        </h5>
        <div className="text-center">
          <div
            className="spinner-border spinner-border-sm text-success"
            role="status"
          >
            <span className="visually-hidden">ƒêang t·∫£i...</span>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div
      style={{
        background: "#fff",
        borderRadius: 16,
        padding: 24,
        border: "1.5px solid #e0fbe2",
        boxShadow: "0 2px 8px rgba(34,197,94,0.05)",
      }}
    >
      <h5 className="fw-bold mb-3" style={{ color: "#22c55e" }}>
        B√†i Vi·∫øt Li√™n Quan
      </h5>
      <div style={{ display: "flex", flexDirection: "column", gap: 16 }}>
        {related.map((item) => (
          <Link
            key={item.id}
            href={`/news/${item.id}`}
            style={{
              display: "flex",
              gap: 12,
              textDecoration: "none",
              color: "inherit",
              padding: 12,
              borderRadius: 8,
              transition: "background 0.2s",
            }}
            onMouseEnter={(e) => {
              e.currentTarget.style.background = "#f0fdf4";
            }}
            onMouseLeave={(e) => {
              e.currentTarget.style.background = "transparent";
            }}
          >
            <Image
              src={item.images?.[0] ?? "/images/thailan.jpeg"}
              alt={item.name}
              style={{
                width: 80,
                height: 60,
                objectFit: "cover",
                borderRadius: 8,
              }}
              width={80}
              height={60}
            />
            <div style={{ flex: 1 }}>
              <div
                style={{
                  fontWeight: 600,
                  fontSize: 14,
                  marginBottom: 4,
                  lineHeight: 1.4,
                  display: "-webkit-box",
                  WebkitLineClamp: 2,
                  WebkitBoxOrient: "vertical",
                  overflow: "hidden",
                }}
              >
                {item.name}
              </div>
              <div style={{ color: "#888", fontSize: 12 }}>
                üìÖ {item.date} ¬∑ üëÅÔ∏è {item.views}
              </div>
            </div>
          </Link>
        ))}
      </div>
    </div>
  );
}
